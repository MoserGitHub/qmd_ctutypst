---
format: qmd_ctutypst-typst
title: "Title"
subtitle: "Subtitle"
projectno: "XXXX"
author:
    - name: "AndrÃ© Moser"
      affiliation: "Department of Clinical Research, University of Bern"
      email: "andre.moser@unibe.ch"
    - name: "Alan Haynes"
      affiliation: "Department of Clinical Research, University of Bern"
      email: "alan.haynes@unibe.ch"
toc: true
paper-size: a4
heading: true
heading-numbering: "1.1.1"
bibliography: references.bib
---

# Section 1

You can use the usual '\$' for mathematical expressions within a text $Y_{t}=a+bX+Y_1+\epsilon$

or indent with '\$\$' 

$$
Y_{t}=a+bX+Y_1+\epsilon
$$

## Subsection

Subsection: Use citations like @ref1 and @ref2.

# Table options

```{r, echo=T}
#| echo: false
#| message: false
#| warning: false

library(gt)

gtcars |>
  dplyr::filter(mfr == "Ferrari", hp < 900) %>%
  dplyr::select(model, hp, mpg_c, mpg_h, msrp) %>%
    gt() |> 
    data_color(
    columns = vars(hp),
    colors = scales::col_numeric(
    palette = c(
    "white", "orange", "red"),
    domain = c(500, 750))
  ) |> 
  data_color(
    columns = vars(mpg_c, mpg_h),
    colors = scales::col_numeric(
    palette = c("white", "green"),
    domain = c(10, 25))
  ) |>
  data_color(
    columns = vars(msrp),
    colors = scales::col_numeric(
    palette = c("white", "pink", "red"),
  domain = NULL)
  )

library(dplyr)

islands_tbl <-
  tibble(
    name = names(islands),
    size = islands
  ) |>
  arrange(desc(size)) |> slice(1:10)
  
  gt_tbl <- gt(islands_tbl)
  
  gt_tbl <- gt_tbl |>
    tab_header(
      title = "Large Landmasses of the World",
      subtitle = "The top ten largest are presented"
    )
  
  gt_tbl <-
    gt_tbl |>
    tab_source_note(
      source_note = "Source: The World Almanac and Book of Facts, 1975, page 406."
    ) |>
    tab_source_note(
      source_note = md("Reference: McNeil, D. R. (1977) *Interactive Data Analysis*.
      Wiley.")
    )
  
# Show the gt table
gt_tbl
```

# Raw typst

For raw typst code you can use **typst chunks**. Raw typst coding might be useful in tables, because you can use R output in typst chunks:

```{r, echo=T}
#| echo: true
#| message: false
#| 

value_1 <- 1
value_2 <- 2
value_3 <- 3
value_4 <- 4
```

```{=typst}
#let frame(stroke) = (x, y) => (
  left: none,
  right: none,
  top: if y < 2 { stroke } else { 0pt },
  bottom: stroke,
)

#set table(
  align: (right, left, center),
  stroke: frame(rgb("21222C")),
)

#table(
  columns: (auto, auto, auto),
  table.header(
    [*Hypothesis*], [*Group*], [*Assumed value*]),
    [Null hypothesis], [Control arm], [`r value_1`],
    [#text(weight: "bold")[Null hypothesis]], [Experimental arm], [`r value_2`],
    [Alternative hypothesis 1], [Control arm], table.cell(fill: purple)[#text(white)[`r value_3`]],
    [Alternative hypothesis 1], table.cell(fill: red)[Combined dosage arms], [`r value_4`]
  )
```

## Tinytable

The *tinytable* packages table allows typst-specific table layout, for example, colouring:

```{r}
#| echo: true
#| message: false
#| 
library(tidyverse)
library(tinytable)

output <- tibble(kpi=c(1,1,2,5), center=c("A", "B", "C", "D"))

output$kpi_ind <- NA
output$kpi_ind[output$kpi==1] <- 1
output$kpi_ind[output$kpi>1 & output$kpi<=2] <- 2
output$kpi_ind[output$kpi>2 & output$kpi<=4] <- 3
output$kpi_ind[output$kpi>4] <- 4

output$kpi_ind <- factor(output$kpi_ind, levels=1:4, 
                         labels=c("#ff0000", "#ffa500", "#90ee90", "#32cd32"))

output_colours <- rep(as.character(output$kpi_ind), 1)

no_rows <- nrow(output)
colour_column <- ncol(output)-1

output <- output |> select(!kpi_ind) |> tt() |> 
  format_tt(digits=2) |> style_tt(i=0, bold=T)

for (i in 1:nrow(output)) {

    output <- output |> style_tt(i = i,
                                 j = colour_column, 
                                 background = output_colours[i], 
                                 color = "black")


}

output
```

# Revision history

```{=typst}
#let frame(stroke) = (x, y) => (
  left: none,
  right: none,
  top: if y < 2 { stroke } else { 0pt },
  bottom: stroke,
)

#set table(
  align: horizon + start,
  stroke: frame(rgb("21222C")),
)

#table(
  columns: (auto, auto, auto),
  table.header([*Version*], [*Date*], [*Revision changes*]),
[0], [Date], [],
)


```


# Reproducibility

R packages used in the analysis:

```{r sessionInfo}
options(width = 90)
sessionInfo()
```